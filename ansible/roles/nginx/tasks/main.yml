---
- name: Create nginx container named '{{ nginx_container_name }}'
  community.docker.docker_container:
    name: '{{ nginx_container_name }}'
    state: started
    image: nginx
    restart_policy: on-failure
    restart_retries: 3
    ports:
      - "80:80"  # Publish container port 80 as host port 80

- name: Remove default nginx config if exists
  community.docker.docker_container_exec:
    container: '{{ nginx_container_name }}'
    argv:
      - /bin/sh
      - "-c"
      - " [ ! -e /etc/nginx/conf.d/default.conf ] || rm /etc/nginx/conf.d/default.conf"

- name: Locally create nginx 'main' config in temporary directory
  ansible.builtin.template:
    src: main.conf.j2
    dest: /tmp/main.conf
    owner: root

- name: Copy main.conf for nginx
  community.docker.docker_container_copy_into:
    container: '{{ nginx_container_name }}'
    path: /tmp/main.conf
    container_path: /etc/nginx/conf.d/main.conf
  notify: reload nginx

- name: Create directory '{{ root_path_for_main }}' in the container
  community.docker.docker_container_exec:
    container: '{{ nginx_container_name }}'
    argv:
      - /bin/sh
      - "-c"
      - "mkdir -p {{ root_path_for_main }}"

- name: Copy index.html as main page
  community.docker.docker_container_copy_into:
    container: '{{ nginx_container_name }}'
    path: '{{ local_root_to_static }}/index.html'
    container_path: '{{ root_path_for_main }}/index.html'
  notify: reload nginx

- name: Copy '{{ local_source_dir }}' directory as source files
  ansible.builtin.shell:
    cmd: "docker cp {{ local_source_dir }} {{ nginx_container_name }}:{{ root_path_for_main }}/src"
  notify: reload nginx
